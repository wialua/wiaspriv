-- Menü Kütüphanesini Yükle
local library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()

-- Oyuncu ve Servisler
local RunService = game:GetService('RunService')
local Players = game:GetService('Players')
local TeamsService = game:GetService("Teams")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Event = ReplicatedStorage:WaitForChild("Event")
local Mouse = Players.LocalPlayer:GetMouse()
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")

-- Menü Penceresini Oluştur
local PepsisWorld = library:CreateWindow({
    Name = "Gelişmiş Menü",
    Themeable = { Info = "Tüm sistemler tablara ayrıldı | wialua" }
})

-- Sekmeleri Oluştur
local PvpTab = PepsisWorld:CreateTab({ Name = "⚔️" })
local VehicleTab = PepsisWorld:CreateTab({ Name = "🚗" })
local ExtraTab = PepsisWorld:CreateTab({ Name = "💰" })
local AutoKillTab = PepsisWorld:CreateTab({ Name = "☠️" })
local HitboxTab = PepsisWorld:CreateTab({ Name = "🎯" })
local TeleportTab = PepsisWorld:CreateTab({ Name = "🔮" })
local MusicTab = PepsisWorld:CreateTab({ Name = "🎵" })
local ChatTab = PepsisWorld:CreateTab({ Name = "💬" })
local SystemTab = PepsisWorld:CreateTab({ Name = "🛠️" })
-- ⚔️ PVP Sekmesi
local CombatSection = PvpTab:CreateSection({ Name = "Savaş" })
CombatSection:AddButton({ Name = "ESP Aç", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/wialua/wiaspriv/refs/heads/main/mdsp"))() end })
CombatSection:AddButton({ Name = "ESP Kapat", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/wialua/wiaspriv/refs/heads/main/mdspclo"))() end })
CombatSection:AddButton({ Name = "Aim Lock", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/erdemscripterxd/wia/refs/heads/main/aimlck"))() end })
-- 🚗 Araçlar Sekmesi
local VehicleSection = VehicleTab:CreateSection({ Name = "Araç/Uçak Hileleri" })
VehicleSection:AddButton({ Name = "Hızlı Night Dönme", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/wialua/wiaspriv/refs/heads/main/ilfafl"))() end })
VehicleSection:AddButton({ Name = "Suda Araç Sürme", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/wialua/wiaspriv/refs/heads/main/drve"))() end })
VehicleSection:AddButton({ Name = "Super Car", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/wialua/wiaspriv/refs/heads/main/crspdorsm"))() end })
-- 🏠 Teleport Sekmesi
local TeleportSection = TeleportTab:CreateSection({ Name = "Hızlı Teleport" })

-- Teleport Fonksiyonu
local function tp(...)
    local plr = game.Players.LocalPlayer
    local args = {...}
    if typeof(args[1]) == "number" and args[2] and args[3] then
        args = Vector3.new(args[1], args[2], args[3])
    elseif typeof(args[1]) == "Vector3" then
        args = args[1]
    elseif typeof(args[1]) == "CFrame" then
        args = args[1].Position
    end
    local dist = (plr.Character.HumanoidRootPart.Position - args).Magnitude
    game:GetService("TweenService"):Create(
        plr.Character.HumanoidRootPart,
        TweenInfo.new(dist / 1000, Enum.EasingStyle.Linear),
        { CFrame = CFrame.new(args) }
    ):Play()
end

-- Teleport Butonları
TeleportSection:AddButton({ Name = "Prison", Callback = function() tp(-945, 119, -2979) end })
TeleportSection:AddButton({ Name = "Gun Shop", Callback = function() tp(-1658, 43, 707) end })
TeleportSection:AddButton({ Name = "Criminal Base", Callback = function() tp(2101, 27, 426) end })

TeleportSection:AddLabel("Robbery Areas", Color3.fromRGB(127, 143, 166))

TeleportSection:AddButton({ Name = "Ship", Callback = function() tp(2517, 81, 335) end })
TeleportSection:AddButton({ Name = "Airport", Callback = function() tp(-2146, 28, -1421) end })
TeleportSection:AddButton({ Name = "Jewelry Store", Callback = function() tp(-109, 96, 746) end })
TeleportSection:AddButton({ Name = "Club", Callback = function() tp(1093, 54, 169) end })
TeleportSection:AddButton({ Name = "Bank", Callback = function() tp(637, 51, 465) end })
TeleportSection:AddButton({ Name = "Pyramid", Callback = function() tp(-1046, 18, -499) end })
TeleportSection:AddButton({ Name = "Casino", Callback = function() tp(1697, 38, 739) end })
TeleportSection:AddButton({ Name = "Train", Callback = function() if game.Workspace.Train ~= nil then tp(game.Workspace.Train.Mid1.Yeet.Position) end end })
TeleportSection:AddButton({ Name = "Plane", Callback = function() game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.CargoPlane.Plane.Tele1.Position) end })
-- Auto Kill V1: BM Hızlandırılmış
local AutoKillSectionV1 = AutoKillTab:CreateSection({ Name = "Auto Kill V1 (BM - Hızlandırılmış)" })
local RunService = game:GetService("RunService")
local TeamsService = game:GetService("Teams")
local Event = game.ReplicatedStorage:WaitForChild("Event")

local function createAutoKillToggleV1(teamName)
    local team = TeamsService:WaitForChild(teamName)
    local isActive = false  -- Toggle durumunu takip etmek için bir değişken
    local connection = nil  -- Heartbeat bağlantısını tutacak değişken

    AutoKillSectionV1:AddToggle({
        Name = teamName,
        Value = false,
        Callback = function(value)
            isActive = value  -- Toggle'ın aktif durumunu güncelle

            if value then
                -- Toggle açıldığında, Heartbeat bağlantısını oluştur
                if connection then
                    connection:Disconnect()  -- Önceki bağlantıyı kes
                end

                connection = RunService.Heartbeat:Connect(function()
                    if not isActive then
                        connection:Disconnect()  -- Toggle kapalıysa, bağlantıyı kes
                        return
                    end

                    -- Takımdaki her oyuncuya işlem yap
                    for _, player in pairs(team:GetPlayers()) do
                        if player.Character then
                            -- Karakterdeki tüm BasePart'ları kontrol et
                            for _, part in pairs(player.Character:GetChildren()) do
                                if part:IsA("BasePart") then
                                    -- Event'i her BasePart için tetikle
                                    Event:FireServer("BM", part.Position)
                                end
                            end
                        end
                    end
                end)
            elseif connection then
                -- Eğer toggle kapalıysa, mevcut bağlantıyı kes
                connection:Disconnect()
            end
        end
    })
end

-- Her bir takım için Auto Kill Toggle'ını oluştur
for _, team in ipairs({"Prisoners", "Police", "Criminals", "Heroes", "Villains"}) do
    createAutoKillToggleV1(team)
end


-- Auto Kill V2: BM Tetikleme
local AutoKillSectionV2 = AutoKillTab:CreateSection({ Name = "Auto Kill V2 (BM Tetikle)" })
local function createAutoKillV2(teamName)
    local team = TeamsService:WaitForChild(teamName)
    local connection = nil
    AutoKillSectionV2:AddToggle({
        Name = "V2: " .. teamName,
        Value = false,
        Callback = function(enabled)
            if connection then
                connection:Disconnect()  -- Önceki bağlantıyı kes
                connection = nil
            end

            if enabled then
                connection = RunService.Heartbeat:Connect(function()
                    for _, player in ipairs(team:GetPlayers()) do
                        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            Event:FireServer("BM", player.Character.HumanoidRootPart.Position)
                        end
                    end
                end)
            end
        end
    })
end
for _, team in ipairs({"Prisoners", "Police", "Criminals", "Heroes", "Villains"}) do
    createAutoKillV2(team)
end
-- Auto Kill V3: Seçilen Oyuncuya Göre Auto Kill
local AutoKillPlayerSection = AutoKillTab:CreateSection({ Name = "Oyuncuya Göre Auto Kill" })
local selectedPlayerName = ""  -- Başlangıçta boş bir oyuncu seçili
local autoKillConnection = nil

local function triggerBM(targetHRP)
    local targetPos = targetHRP.Position
    Event:FireServer("BM", targetPos)
    Event:FireServer("BM", targetPos)
end

local function triggerAttack(targetPlayerName)
    local targetPlayer = Players:FindFirstChild(targetPlayerName)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetHRP = targetPlayer.Character.HumanoidRootPart
        task.spawn(function()
            triggerBM(targetHRP)
        end)
    end
end

local function updatePlayerList()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Name ~= LocalPlayer.Name then
            table.insert(playerNames, player.Name)
        end
    end
    return playerNames
end

AutoKillPlayerSection:AddDropdown({
    Name = "Oyuncu Seç",
    List = updatePlayerList(),
    Callback = function(selectedPlayer)
        selectedPlayerName = selectedPlayer
    end
})

AutoKillPlayerSection:AddToggle({
    Name = "Auto Kill Aktif",
    Value = false,
    Callback = function(enabled)
        if enabled then
            if selectedPlayerName ~= "" then
                if autoKillConnection then
                    autoKillConnection:Disconnect()
                end
                autoKillConnection = RunService.Heartbeat:Connect(function()
                    triggerAttack(selectedPlayerName)
                end)
            end
        else
            if autoKillConnection then
                autoKillConnection:Disconnect()
                autoKillConnection = nil
            end
        end
    end
})
-- 🚗 Araç Spawnlama
local VehicleSpawnSection = VehicleTab:CreateSection({ Name = "Araç Spawnlama" })
local selectedVehicle = "Nighthawk"
VehicleSpawnSection:AddDropdown({
    Name = "Araç Seç",
    List = {"Fury", "Rhino", "Nighthawk", "Light Bike", "Thunderbird", "Warhawk", "Buzzard"},
    Callback = function(v) selectedVehicle = v end
})
VehicleSpawnSection:AddButton({
    Name = "Seçilen Araca Bin",
    Callback = function()
        local char = LocalPlayer.Character
        if not char or not char:FindFirstChild("HumanoidRootPart") then return end
        local HRP = char.HumanoidRootPart
        local btp = Instance.new("Vector3Value", LocalPlayer)
        btp.Name = "btp"
        btp.Value = HRP.Position
        HRP.CFrame = Workspace.VehicleSpawns[selectedVehicle].Pos.CFrame
        wait()
        HRP.CFrame = CFrame.new(btp.Value)
        wait()
        local vehicle = Workspace.ObjectSelection[selectedVehicle]
        if vehicle then
            vehicle.DriveSeat.Disabled = false
            vehicle:MoveTo(HRP.Position)
            wait()
            HRP.CFrame = vehicle.DriveSeat.CFrame
            wait()
            vehicle.DriveSeat.Disabled = true
        end
        btp:Destroy()
    end
})

-- 🚗 Araç Spawnlama (Event Sistemiyle)
local VehicleSpawnEventSection = VehicleTab:CreateSection({ Name = "Araç Spawn (Sende Olanlar)" })
local selectedSpawnVehicle = "Fury"

VehicleSpawnEventSection:AddDropdown({
    Name = "Spawnlanacak Araç",
    List = {"Fury", "Rhino", "Nighthawk", "Light Bike", "Thunderbird", "Warhawk", "Buzzard"},
    Callback = function(v) selectedSpawnVehicle = v end
})

VehicleSpawnEventSection:AddButton({
    Name = "Araç Spawn (Sende Olanlar)",
    Callback = function()
        local args = {
            [1] = "SpawnVehicle",
            [2] = selectedSpawnVehicle
        }
        Event:FireServer(unpack(args))
    end
})
-- 🎯 Hitbox (Gelişmiş ve Stabil)
local HitboxSection = HitboxTab:CreateSection({ Name = "Ayarlar" })
local selectedTeams = {}
local isHitboxEnabled = false
local lastSize = 20
local lastTransparency = 0.5
local lastColor = Color3.fromRGB(255, 0, 0)
local hitboxConnection

local function applyHitbox(player)
    if player and player.Character and player.Character:FindFirstChild("Head") then
        local head = player.Character.Head
        head.Size = Vector3.new(lastSize, lastSize, lastSize)
        head.Transparency = lastTransparency
        head.BrickColor = BrickColor.new(lastColor)
        head.CanCollide = false
        head.Material = Enum.Material.ForceField
    end
end

local function resetHitbox(player)
    if player and player.Character and player.Character:FindFirstChild("Head") then
        local head = player.Character.Head
        head.Size = Vector3.new(2, 1, 1)
        head.Transparency = 0
        head.BrickColor = BrickColor.new("Medium stone grey")
        head.CanCollide = true
        head.Material = Enum.Material.Plastic
    end
end

local function updateHitboxes()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Team and table.find(selectedTeams, player.Team.Name) then
            applyHitbox(player)
        else
            resetHitbox(player)
        end
    end
end

HitboxSection:AddToggle({
    Name = "Hitbox Aktif",
    Value = false,
    Callback = function(state)
        isHitboxEnabled = state
        if state then
            if hitboxConnection then hitboxConnection:Disconnect() end
            hitboxConnection = RunService.Heartbeat:Connect(updateHitboxes)
        else
            if hitboxConnection then
                hitboxConnection:Disconnect()
                hitboxConnection = nil
            end
            for _, player in ipairs(Players:GetPlayers()) do
                resetHitbox(player)
            end
        end
    end
})

HitboxSection:AddSlider({ Name = "Boyut", Min = 1, Max = 20, Value = lastSize, Callback = function(v) lastSize = v end })
HitboxSection:AddSlider({ Name = "Şeffaflık", Min = 0, Max = 1, Value = lastTransparency, Callback = function(v) lastTransparency = v end })
HitboxSection:AddColorPicker({ Name = "Renk", Value = lastColor, Callback = function(v) lastColor = v end })

local TeamSection = HitboxTab:CreateSection({ Name = "Takım Seçimi" })
for _, team in ipairs({"Prisoners", "Police", "Criminals", "Heroes", "Villains"}) do
    TeamSection:AddToggle({
        Name = team,
        Value = false,
        Callback = function(value)
            if value then
                if not table.find(selectedTeams, team) then
                    table.insert(selectedTeams, team)
                end
            else
                for i, t in ipairs(selectedTeams) do
                    if t == team then
                        table.remove(selectedTeams, i)
                        break
                    end
                end
            end
            if isHitboxEnabled then
                updateHitboxes()
            end
        end
    })
end
-- 💰 Ekstra
local XPSection = ExtraTab:CreateSection({ Name = "XP & Para" })
XPSection:AddButton({ Name = "XP Scripti", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/wialua/wiaspriv/refs/heads/main/exp"))() end })
XPSection:AddButton({ Name = "Auto Farm", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/wialua/wiaspriv/refs/heads/main/auto%20farm%20(%20para%20)"))() end })
XPSection:AddButton({ Name = "Crash", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/wialua/wiaspriv/refs/heads/main/crsh"))() end })
XPSection:AddButton({ Name = "Polis Keycard", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/wialua/wiaspriv/refs/heads/main/key"))() end })
-- Sistem Sekmesi: Server Hop
local ServerHopSection = SystemTab:CreateSection({ Name = "🌐 Server Hop Sistemi" })

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlaceId = game.PlaceId
local CurrentJobId = game.JobId
local apiURL = "https://games.roblox.com/v1/games/"
local visitedServers = {}

-- Ayarlar
local autoHopEnabled = false
local hopInterval = 120
local preferLowPlayerCount = true
local pingLimit = 200 -- ms

-- UI Göstergeleri
local statusLabel = ServerHopSection:AddLabel("Durum: Bekleniyor...")
local serverCountLabel = ServerHopSection:AddLabel("Sunucular: 0")
local pingLabel = ServerHopSection:AddLabel("Ping: Belirleniyor...")

-- Sunucu listesi çekme fonksiyonu
local function getServerList(cursor)
    local url = apiURL .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
    if cursor then url = url .. "&cursor=" .. cursor end
    local response = game:HttpGet(url)
    return HttpService:JSONDecode(response)
end

-- Ping kontrol fonksiyonu
local function getPing()
    return math.floor(game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue())
end

-- Sunucu seçme ve teleport fonksiyonu
local function hopToServer()
    local servers, cursor = {}, nil
    repeat
        local data = getServerList(cursor)
        for _, server in ipairs(data.data) do
            if server.id ~= CurrentJobId and not visitedServers[server.id] and server.playing < server.maxPlayers then
                if not preferLowPlayerCount or server.playing <= 10 then
                    table.insert(servers, server)
                end
            end
        end
        cursor = data.nextPageCursor
    until not cursor or #servers >= 5

    serverCountLabel:SetText("Sunucular: " .. tostring(#servers))

    if #servers > 0 then
        local chosen = servers[math.random(1, #servers)]
        visitedServers[chosen.id] = true
        statusLabel:SetText("Durum: Teleport ediliyor...")
        TeleportService:TeleportToPlaceInstance(PlaceId, chosen.id, LocalPlayer)
    else
        statusLabel:SetText("Durum: Uygun sunucu bulunamadı.")
    end
end

-- Otomatik geçiş döngüsü
task.spawn(function()
    while true do
        if autoHopEnabled then
            pingLabel:SetText("Ping: " .. getPing() .. " ms")
            if getPing() <= pingLimit then
                statusLabel:SetText("Durum: Otomatik geçiş aktif...")
                hopToServer()
            else
                statusLabel:SetText("Durum: Ping yüksek (" .. getPing() .. " ms)")
            end
        end
        task.wait(hopInterval)
    end
end)

-- UI Kontrolleri
ServerHopSection:AddToggle({
    Name = "Otomatik Server Hop",
    Value = false,
    Callback = function(v)
        autoHopEnabled = v
        statusLabel:SetText("Durum: " .. (v and "Aktif" or "Pasif"))
    end
})

ServerHopSection:AddSlider({
    Name = "Zaman (Saniye)",
    Min = 30,
    Max = 600,
    Value = hopInterval,
    Callback = function(v)
        hopInterval = v
    end
})

ServerHopSection:AddToggle({
    Name = "Düşük Oyunculuya Öncelik",
    Value = preferLowPlayerCount,
    Callback = function(v)
        preferLowPlayerCount = v
    end
})

ServerHopSection:AddSlider({
    Name = "Ping Limiti (ms)",
    Min = 50,
    Max = 500,
    Value = pingLimit,
    Callback = function(v)
        pingLimit = v
    end
})

ServerHopSection:AddButton({
    Name = "Hemen Server Hop",
    Callback = function()
        hopToServer()
    end
})

ServerHopSection:AddButton({
    Name = "Sunucu Listesini Yenile",
    Callback = function()
        statusLabel:SetText("Durum: Sunucular yenileniyor...")
        visitedServers = {} -- temizle
        hopToServer()
    end
})

ServerHopSection:AddButton({
    Name = "🔁 Sunucuya Rejoin",
    Callback = function()
        statusLabel:SetText("Durum: Yeniden bağlanılıyor...")
        TeleportService:TeleportToPlaceInstance(PlaceId, CurrentJobId, LocalPlayer)
    end
})
