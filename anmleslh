-- Credits To The Original Devs @xz, @goof
getgenv().Config = {
	Invite = "informant.wtf",
	Version = "0.0",
}

getgenv().luaguardvars = {
	DiscordName = "username#0000",
}

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/drillygzzly/Other/main/1"))()
library:init()

local Window = library.NewWindow({
	title = "Wia.Wtf",
	size = UDim2.new(0, 525, 0, 650)
})

local tabs = {
	Teleport = Window:AddTab("Teleport"),
	Other = Window:AddTab("Other"),
	Settings = library:CreateSettingsTab(Window),
}

-- === TELEPORT ===
local function teleportTo(pos)
	local plr = game.Players.LocalPlayer
	if plr and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
		plr.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
	end
end

local tpSections = {
	World1 = tabs.Teleport:AddSection("Dünya 1", 1),
	World2 = tabs.Teleport:AddSection("Dünya 2", 2),
	Extra = tabs.Teleport:AddSection("Extra", 2),
}

local World1_Positions = {
	{"1. Yer", Vector3.new(89.58, 4.09, 464.90)},
	{"2. Yer", Vector3.new(72.27, 4.09, 600.08)},
	{"3. Yer", Vector3.new(91.06, 4.09, 873.79)},
	{"4. Yer", Vector3.new(79.89, 4.09, 1119.59)},
	{"5. Yer", Vector3.new(85.60, 4.09, 1358.98)},
}
for i, data in ipairs(World1_Positions) do
	tpSections.World1:AddButton({
		text = data[1],
		flag = "TP_W1_"..i,
		callback = function() teleportTo(data[2]) end
	})
end

local World2_Positions = {
	{"1. Yer", Vector3.new(5094.49, 4.16, 297.40)},
	{"2. Yer", Vector3.new(5076.71, 4.09, 609.92)},
	{"3. Yer", Vector3.new(5074.81, 4.09, 865.44)},
}
for i, data in ipairs(World2_Positions) do
	tpSections.World2:AddButton({
		text = data[1],
		flag = "TP_W2_"..i,
		callback = function() teleportTo(data[2]) end
	})
end

tpSections.Extra:AddButton({
	text = "Golden Pet Machine",
	flag = "TP_Golden",
	callback = function()
		teleportTo(Vector3.new(158.47, 3.92, 725.00))
	end
})
tpSections.Extra:AddButton({
	text = "Void Pet Machine",
	flag = "TP_Void",
	callback = function()
		teleportTo(Vector3.new(5166.22, 4.13, 378.49))
	end
})

-- === OTHER ===
local otherSec = tabs.Other:AddSection("Hileler", 1)

-- ClickRate Hook
otherSec:AddButton({
	text = "Hızlı tıklama",
	flag = "Click_Hook",
	callback = function()
		local PlayerUtil = require(game:GetService("ReplicatedStorage").Modules.Player.PlayerUtil)
		hookfunction(PlayerUtil.GetClickRate, function() return 0 end)
		print("ClickRate hooklandı.")
	end
})

-- Speed Lock
local WalkSpeedValue = 16

local function LockWalkSpeed()
	local plr = game.Players.LocalPlayer
	if not plr then return end
	local function apply(hum)
		if not hum then return end
		hum.WalkSpeed = WalkSpeedValue
		hum:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
			if hum.WalkSpeed ~= WalkSpeedValue then
				hum.WalkSpeed = WalkSpeedValue
			end
		end)
	end

	if plr.Character then
		local hum = plr.Character:FindFirstChildOfClass("Humanoid")
		if hum then apply(hum) end
	end

	plr.CharacterAdded:Connect(function(char)
		local hum = char:WaitForChild("Humanoid")
		apply(hum)
	end)
end

LockWalkSpeed()

otherSec:AddSlider({
	text = "Yürüyüş Hızı",
	flag = "Speed_Slider",
	value = 16, min = 0, max = 500, increment = 1,
	callback = function(v)
		WalkSpeedValue = v
		local plr = game.Players.LocalPlayer
		if plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") then
			plr.Character.Humanoid.WalkSpeed = WalkSpeedValue
		end
	end
})

-- NoClip
local noclipEnabled = false
local noclipConn

local function toggleNoclip(state)
	noclipEnabled = state
	if noclipEnabled then
		noclipConn = game:GetService("RunService").Stepped:Connect(function()
			local char = game.Players.LocalPlayer.Character
			if char then
				for _, part in pairs(char:GetDescendants()) do
					if part:IsA("BasePart") then
						part.CanCollide = false
					end
				end
			end
		end)
	else
		if noclipConn then
			noclipConn:Disconnect()
			noclipConn = nil
		end
	end
end

otherSec:AddToggle({
	text = "NoClip",
	flag = "Toggle_Noclip",
	callback = toggleNoclip
})

-- Infinite Jump
local infJump = false
otherSec:AddToggle({
	text = "Infinite Jump",
	flag = "Toggle_InfJump",
	callback = function(state) infJump = state end
})

game:GetService("UserInputService").JumpRequest:Connect(function()
	if infJump then
		local plr = game.Players.LocalPlayer
		if plr.Character and plr.Character:FindFirstChild("Humanoid") then
			plr.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
		end
	end
end)

-- Bildirim
library:SendNotification("Script başarıyla yüklendi!", 5, Color3.fromRGB(0, 255, 0))
