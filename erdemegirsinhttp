-- =====================================
-- LinoriaLib Full Example (Detailed, Modular, Commented)
-- Written by Wally | Fully Explained Version
-- =====================================

-- ==============================
-- 1. LOAD LIBRARY & ADDONS
-- ==============================
local repo = 'https://raw.githubusercontent.com/mstudio45/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

-- Shortcut tables for easier access
local Options = Library.Options
local Toggles = Library.Toggles

-- ==============================
-- 2. GLOBAL SETTINGS
-- ==============================
Library.ShowToggleFrameInKeybinds = true   -- Show toggles in Keybind menu (mobile-friendly)
Library.ShowCustomCursor = true           -- Use Linoria custom cursor globally
Library.NotifySide = "Left"               -- Notifications appear on Left/Right

-- ==============================
-- 3. CREATE WINDOW
-- ==============================
local Window = Library:CreateWindow({
    Title = 'MemeAvcƒ±sƒ±',
    Center = true,
    AutoShow = true,
    Resizable = true,
    ShowCustomCursor = false,
    UnlockMouseWhileOpen = true,
    NotifySide = "Left",
    TabPadding = 8,
    MenuFadeTime = 0.2
})

local Tabs = {
    Main = Window:AddTab('Main'),
    UISettings = Window:AddTab('UI Settings')
}

-- ======================================
-- ‚ö° Auto Touch (Guaranteed Stable Build)
-- ======================================

local Workspace = game:GetService("Workspace")
local Player = game:GetService("Players").LocalPlayer

-- B√∂lgeler (her biri birden fazla TouchInterest i√ßeriyor)
local touchParts = {
    ["1.B√∂lge"] = {
        Workspace.Buttons_1.x1.Touch2.TouchInterest,
        Workspace.Buttons_4.x10.Touch2.TouchInterest,
        Workspace.Buttons_1.x25.Touch2.TouchInterest
    },
    ["2.B√∂lge"] = {
        Workspace.Buttons_2.x1.Touch2.TouchInterest,
        Workspace.Buttons_2.x10.Touch2.TouchInterest,
        Workspace.Buttons_2.x25.Touch2.TouchInterest
    },
    ["3.B√∂lge"] = {
        Workspace.Buttons_3.x1.Touch2.TouchInterest,
        Workspace.Buttons_3.x10.Touch2.TouchInterest,
        Workspace.Buttons_3.x25.Touch2.TouchInterest
    },
    ["4.B√∂lge"] = {
        Workspace.Buttons_4.x1.Touch2.TouchInterest,
        Workspace.Buttons_4.x10.Touch2.TouchInterest,
        Workspace.Buttons_4.x25.Touch2.TouchInterest
    },
    ["Normal Luck"] = {
        Workspace.Buttons_99.x1.Touch2.TouchInterest
    },
    ["5x Luck"] = {
        Workspace.Buttons_99.x10.Touch2.TouchInterest
    },
    ["10x Luck"] = {
        Workspace.Buttons_99.x25.Touch2.TouchInterest
    }
}

-- ======================================
-- Linoria UI B√∂l√ºm√º
-- ======================================
local TouchTab = Tabs.Main:AddLeftGroupbox('Auto Touch')

TouchTab:AddDropdown('AutoTouchZones', {
    Values = {"1.B√∂lge","2.B√∂lge","3.B√∂lge","4.B√∂lge","Normal Luck","5x Luck","10x Luck"},
    Multi = true,
    Text = "B√∂lgeleri Se√ß",
    Tooltip = "Se√ßilen b√∂lgelerdeki tu≈ülara otomatik dokunur.",
    Default = {}
})

TouchTab:AddToggle('AutoTouchToggle', {
    Text = "‚ö° Auto Touch",
    Default = false,
    Tooltip = "Se√ßilen b√∂lgelerdeki butonlara otomatik dokunur."
})

-- ======================================
-- √áalƒ±≈üma Mantƒ±ƒüƒ±
-- ======================================
local autoTouchRunning = false
local autoTouchThread

local function safeTouch(part)
    if not part or not part.Parent then return end
    local hrp = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    pcall(function()
        firetouchinterest(hrp, part.Parent, 0)
        firetouchinterest(hrp, part.Parent, 1)
    end)
end

local function startAutoTouch()
    if autoTouchRunning then return end
    autoTouchRunning = true
    Library:Notify("‚ö° Auto Touch ba≈üladƒ±!", 3)

    autoTouchThread = task.spawn(function()
        while autoTouchRunning do
            local selectedZones = Options.AutoTouchZones.Value
            local hrp = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")

            if hrp and selectedZones and #selectedZones > 0 then
                for _, zoneName in ipairs(selectedZones) do
                    local list = touchParts[zoneName]
                    if list then
                        for _, ti in ipairs(list) do
                            if not autoTouchRunning then break end
                            safeTouch(ti)
                            task.wait(0.1) -- her dokunu≈ü arasƒ± kƒ±sa gecikme
                        end
                    end
                end
            end

            task.wait(0.25) -- ana loop aralƒ±ƒüƒ±
        end
    end)
end

local function stopAutoTouch()
    autoTouchRunning = false
    Library:Notify("‚èπÔ∏è Auto Touch durduruldu.", 3)
end

Toggles.AutoTouchToggle:OnChanged(function()
    if Toggles.AutoTouchToggle.Value then
        startAutoTouch()
    else
        stopAutoTouch()
    end
end)


-- ==============================
-- Ghost Farm Tab (Yeni Grup)
-- ==============================
local GhostGroup = Tabs.Main:AddRightGroupbox('Ghost Farm')

GhostGroup:AddDropdown('GhostType', {
    Values = {"Common Ghost", "Uncommon Ghost", "Rare Ghost", "Epic Ghost", "Legendary Ghost"},
    Multi = false,
    Text = "Select Ghost Type",
    Default = "Common Ghost",
})

GhostGroup:AddToggle('AutoGhostFarm', {
    Text = "Enable Ghost Farm",
    Default = false,
    Tooltip = "Automatically farms selected ghosts",
    Callback = function(v)
        if v then
            startGhostFarm()
        else
            stopGhostFarm()
        end
    end
})

-- ==============================
-- Ghost Farm Functions
-- ==============================
local ghostRunning = false
local ghostLoop

-- K√º√ß√ºk-b√ºy√ºk harf, birle≈üik yazƒ±m fark etmeden arama yapan fonksiyon:
local function matchGhostName(objName, selectedType)
    local cleanName = string.lower(objName)
    local cleanType = string.lower(selectedType:gsub("%s+", "")) -- bo≈üluklarƒ± sil
    return string.find(cleanName, cleanType) ~= nil
end

function findClosestGhost(selectedType)
    local workspaceChildren = game:GetService("Workspace"):GetChildren()
    local hrp = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return nil end

    local closest, dist = nil, math.huge
    for _, obj in ipairs(workspaceChildren) do
        -- Cube.001 i√ßeren objeleri tara
        local cube = obj:FindFirstChild("Cube.001")
        if cube and cube:FindFirstChild("ProximityPrompt") and matchGhostName(obj.Name, selectedType) then
            local mag = (cube.Position - hrp.Position).Magnitude
            if mag < dist then
                closest = cube
                dist = mag
            end
        end
    end
    return closest
end

function startGhostFarm()
    if ghostRunning then return end
    ghostRunning = true

    ghostLoop = task.spawn(function()
        while ghostRunning do
            local selected = Options.GhostType.Value
            local cube = findClosestGhost(selected)
            if cube and cube:FindFirstChild("ProximityPrompt") then
                local prompt = cube.ProximityPrompt
                prompt.HoldDuration = 0
                local hrp = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    -- Karakteri yakla≈ütƒ±r
                    hrp.CFrame = CFrame.new(cube.Position + Vector3.new(0, 3, 0))
                    task.wait(0.15)
                    fireproximityprompt(prompt)
                end
            end
            task.wait(0.25) -- √ßok hƒ±zlƒ± olmasƒ±n, ping rahat
        end
    end)
end

function stopGhostFarm()
    ghostRunning = false
end

-- =======================================
-- üê£ Advanced Hatch System (Linoria Entegre)
-- =======================================

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HatchRemote = ReplicatedStorage:WaitForChild("Functions"):WaitForChild("Hatch")

-- ==============================
--  Yeni Sekme / Grup
-- ==============================
local HatchGroup = Tabs.Main:AddRightGroupbox('Advanced Hatch')

-- Textbox: Pet Name
HatchGroup:AddInput('PetName', {
    Default = '',
    Text = 'Pet Adƒ±',
    Placeholder = '√∂rn: Pumpkin',
    Tooltip = 'Pet adƒ±nƒ± yaz (case sensitive olabilir)',
})

-- Dropdown: Mode
HatchGroup:AddDropdown('HatchMode', {
    Values = {'Single', 'Triple', 'Octuple'},
    Default = 1,
    Text = 'Hatch Modu',
    Tooltip = 'Hatch modunu se√ß',
})

-- Loop Toggle
HatchGroup:AddToggle('LoopHatch', {
    Text = 'Loop Hatch',
    Default = false,
    Tooltip = 'Se√ßili pet ve mod ile s√ºrekli hatch yapar'
})

-- Hatch Button
HatchGroup:AddButton({
    Text = 'üê£ Hatch Now',
    Func = function()
        local pet = Options.PetName.Value
        local mode = Options.HatchMode.Value

        if pet == '' or not mode then
            Library:Notify('‚ö†Ô∏è Pet adƒ± veya mod bo≈ü olamaz!', 3)
            return
        end

        local success, err = pcall(function()
            -- Tek seferlik 3 hƒ±zlƒ± tetikleme
            for i = 1, 3 do
                HatchRemote:InvokeServer(pet, mode)
                task.wait(0.05)
            end
        end)

        if success then
            Library:Notify(('‚úÖ Hatch ba≈üarƒ±lƒ±: %s [%s]'):format(pet, mode), 3)
        else
            Library:Notify(('‚ùå Hatch hatasƒ±: %s'):format(err), 4)
        end
    end
})

-- ==============================
-- Loop Sistemi
-- ==============================
local looping = false
local loopThread

Toggles.LoopHatch:OnChanged(function()
    looping = Toggles.LoopHatch.Value

    if looping then
        Library:Notify('üîÅ Loop Hatch ba≈ülatƒ±ldƒ±', 3)

        loopThread = task.spawn(function()
            while looping do
                local pet = Options.PetName.Value
                local mode = Options.HatchMode.Value

                if pet ~= '' and mode then
                    local ok, err = pcall(function()
                        HatchRemote:InvokeServer(pet, mode)
                    end)

                    if not ok then
                        warn('Hatch hatasƒ±:', err)
                    end
                else
                    Library:Notify('‚ö†Ô∏è Pet veya mod bo≈ü!', 2)
                end

                -- √áok hƒ±zlƒ± olmasƒ±n, ping korumalƒ± stabil hƒ±z
                task.wait(0.25)
            end
        end)
    else
        Library:Notify('‚èπÔ∏è Loop Hatch durduruldu', 3)
        looping = false
    end
end)

-- ==============================
-- üè† Auto Ev (Linoria Group)
-- ==============================
local touchEvParts = {
    game:GetService("Workspace").Houses.House1.Pad.Pad.TouchInterest,
    game:GetService("Workspace").Houses.House2:GetChildren()[2].Pad.TouchInterest,
    game:GetService("Workspace").Houses.House3.Model.Pad.TouchInterest,
    game:GetService("Workspace").Houses.House4:GetChildren()[2].Pad.TouchInterest,
    game:GetService("Workspace").Houses.House5:GetChildren()[2].Pad.TouchInterest,
    game:GetService("Workspace").Houses.House6.Model.Pad.TouchInterest
}

local AutoEvGroup = Tabs.Main:AddRightGroupbox('Auto Ev')

AutoEvGroup:AddToggle('AutoEv', {
    Text = 'üè† Auto Ev',
    Default = false,
    Tooltip = 'Ev padlerine otomatik dokunur (stabil, lag yapmaz)'
})

-- ==============================
--  Core Fonksiyonlar
-- ==============================
local autoEvRunning = false
local autoEvLoop

Toggles.AutoEv:OnChanged(function()
    if Toggles.AutoEv.Value then
        if autoEvRunning then return end
        autoEvRunning = true
        Library:Notify('üè† Auto Ev ba≈ülatƒ±ldƒ±!', 3)

        autoEvLoop = task.spawn(function()
            while autoEvRunning do
                local player = game.Players.LocalPlayer
                local char = player.Character
                local hrp = char and char:FindFirstChild('HumanoidRootPart')

                if hrp then
                    for _, touch in ipairs(touchEvParts) do
                        if not autoEvRunning then break end
                        if touch and touch.Parent then
                            pcall(function()
                                -- TouchInterest objesi i√ßinde olduƒüu Part‚Äôe dokun
                                firetouchinterest(hrp, touch.Parent, 0)
                                firetouchinterest(hrp, touch.Parent, 1)
                            end)
                            task.wait(0.15) -- her pad arasƒ± minik gecikme (lag koruma)
                        end
                    end
                end
                task.wait(0.3) -- ana loop bekleme, ping stabil
            end
        end)
    else
        autoEvRunning = false
        Library:Notify('‚èπÔ∏è Auto Ev durduruldu.', 3)
    end
end)

-- Auto Rebirth Group
local RebirthGroup = Tabs.Main:AddLeftGroupbox("Auto Rebirth")

-- Input: Rebirth miktarƒ±
RebirthGroup:AddInput('RebirthAmountInput', {
    Text = 'Rebirth Amount',
    Placeholder = '√ñrn: 10000',
    Default = '10000',
    Callback = function(v)
        Options.RebirthAmountInput.Value = tonumber(v) or 1
    end
})

-- Toggle
RebirthGroup:AddToggle('AutoRebirthToggle', {
    Text = 'Enable Auto Rebirth',
    Default = false
})

-- Manual Button
RebirthGroup:AddButton({
    Text = 'Rebirth Now',
    Func = function()
        local amount = tonumber(Options.RebirthAmountInput.Value) or 1
        pcall(function()
            game:GetService("ReplicatedStorage").Activates.Rebirth:FireServer(amount)
        end)
    end
})

-- Loop kontrol
local autoRebirthRunning = false

-- Toggle deƒüi≈üimini dinle
Toggles.AutoRebirthToggle:OnChanged(function(value)
    autoRebirthRunning = value
    if value then
        -- Loopu task.spawn ile ba≈ülat
        task.spawn(function()
            local RebirthEvent = game:GetService("ReplicatedStorage").Activates.Rebirth
            while autoRebirthRunning do
                local amount = tonumber(Options.RebirthAmountInput.Value) or 1
                -- Tek seferde 2 kez tetikleme
                pcall(function()
                    RebirthEvent:FireServer(amount)
                    RebirthEvent:FireServer(amount)
                end)
                task.wait() -- minimal yield, FPS d√º≈ümez
            end
        end)
    end
end)
