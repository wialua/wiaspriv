--  script written by wia

local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    Title = 'Wia Menü',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

local Tabs = {
    Hitbox = Window:AddTab('Hitbox'),
    ['UI Settings'] = Window:AddTab('Menü Ayarları'),
}

local HitboxGroup = Tabs.Hitbox:AddLeftGroupbox('Hitbox Settings')

local HitboxEnabled = false
local HitboxSizeMultiplier = 5
local HitboxTransparency = 0.7
local HitboxColor = BrickColor.new("Really blue")
local SelectedBodyPart = "Head"
local SelectedTeam = "All"
local Players = game:GetService('Players')
local LocalPlayer = Players.LocalPlayer

local AvailableBodyParts = {
    "Head", "HumanoidRootPart", "Torso", "UpperTorso", "LowerTorso", "Left Arm", "Right Arm", "Left Leg", "Right Leg"
}

local AvailableColors = {
    "Really blue", "Really red", "Lime green", "New Yeller", "Royal purple", "Bright orange", "Hot pink", "White", "Black"
}

local AvailableTeams = {
    "All", "Prisoners", "Police", "Criminals", "Heroes", "Villains"
}

local function GetPlayerTeam(player)
    if player.Team then
        return player.Team.Name
    end
    return "Unknown"
end

local function ResetHitbox(player)
    if player.Character then
        for _, partName in ipairs(AvailableBodyParts) do
            local bodyPart = player.Character:FindFirstChild(partName)
            if bodyPart then
                bodyPart.Size = bodyPart:GetAttribute("OriginalSize") or bodyPart.Size
                bodyPart.Transparency = 0
                bodyPart.BrickColor = BrickColor.new("Medium stone grey")
                bodyPart.Material = "Plastic"
                bodyPart.CanCollide = true
            end
        end
    end
end

local function UpdateHitbox(player)
    if HitboxEnabled and player ~= LocalPlayer and player.Character then
        if SelectedTeam == "All" or GetPlayerTeam(player) == SelectedTeam then
            local bodyPart = player.Character:FindFirstChild(SelectedBodyPart)
            if bodyPart then
                if not bodyPart:GetAttribute("OriginalSize") then
                    bodyPart:SetAttribute("OriginalSize", bodyPart.Size)
                end
                bodyPart.Size = bodyPart:GetAttribute("OriginalSize") * HitboxSizeMultiplier
                bodyPart.Transparency = HitboxTransparency
                bodyPart.BrickColor = HitboxColor
                bodyPart.Material = "Plastic"
                bodyPart.CanCollide = false
            end
        else
            ResetHitbox(player)
        end
    else
        ResetHitbox(player)
    end
end

local function ApplyHitboxToAll()
    for _, player in ipairs(Players:GetPlayers()) do
        UpdateHitbox(player)
    end
end

HitboxGroup:AddToggle('HitboxToggle', {
    Text = 'Enable Hitbox',
    Default = false,
    Tooltip = 'Toggle Hitbox on/off',
    Callback = function(Value)
        HitboxEnabled = Value
        ApplyHitboxToAll()
    end
})

HitboxGroup:AddSlider('HitboxSizeMultiplier', {
    Text = 'Hitbox Size Multiplier',
    Default = 5,
    Min = 1,
    Max = 10,
    Rounding = 1,
    Callback = function(Value)
        HitboxSizeMultiplier = Value
        ApplyHitboxToAll()
    end
})

HitboxGroup:AddSlider('HitboxTransparency', {
    Text = 'Hitbox Saydamlığı',
    Default = 0.7,
    Min = 0,
    Max = 1,
    Rounding = 2,
    Callback = function(Value)
        HitboxTransparency = Value
        ApplyHitboxToAll()
    end
})

HitboxGroup:AddDropdown('HitboxColor', {
    Values = AvailableColors,
    Default = "Really blue",
    Multi = false,
    Text = 'Hitbox Rengi',
    Tooltip = 'Seçtiğiniz renkte hitbox uygulayın',
    Callback = function(Value)
        HitboxColor = BrickColor.new(Value)
        ApplyHitboxToAll()
    end
})

HitboxGroup:AddDropdown('BodyPartSelection', {
    Values = AvailableBodyParts,
    Default = "Head",
    Multi = false,
    Text = 'Hedef Vücut Bölgesi',
    Tooltip = 'Hitbox uygulanacak bölgeyi seçin',
    Callback = function(Value)
        SelectedBodyPart = Value
        ApplyHitboxToAll()
    end
})

HitboxGroup:AddDropdown('TeamSelection', {
    Values = AvailableTeams,
    Default = "All",
    Multi = false,
    Text = 'Hedef Takım',
    Tooltip = 'Hitbox uygulanacak takımı seçin',
    Callback = function(Value)
        SelectedTeam = Value
        ApplyHitboxToAll()
    end
})

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        wait(1)
        ApplyHitboxToAll()
    end)
end)

for _, player in ipairs(Players:GetPlayers()) do
    player.CharacterAdded:Connect(function()
        wait(1)
        ApplyHitboxToAll()
    end)
end

LocalPlayer.CharacterAdded:Connect(function()
    wait(1)
    ApplyHitboxToAll()
end)

local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')
MenuGroup:AddButton('Menü yok et', function() Library:Unload() end)

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
ThemeManager:SetFolder('MyScriptHub')
SaveManager:SetFolder('MyScriptHub/specific-game')
SaveManager:BuildConfigSection(Tabs['UI Settings'])
ThemeManager:ApplyToTab(Tabs['UI Settings'])
SaveManager:LoadAutoloadConfig()
